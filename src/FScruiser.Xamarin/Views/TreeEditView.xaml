<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:effects="clr-namespace:Xamarin.CommunityToolkit.Effects;assembly=Xamarin.CommunityToolkit"
             xmlns:tk_converters="clr-namespace:Xamarin.CommunityToolkit.Converters;assembly=Xamarin.CommunityToolkit"
             xmlns:converters="clr-namespace:FScruiser.XF.Converters"
             xmlns:viewmodels="clr-namespace:FScruiser.XF.ViewModels"
             xmlns:controls="clr-namespace:FScruiser.XF.Controls"
             x:Class="FScruiser.XF.Views.TreeEditView"
             x:Name="_page"
             Title="{Binding TreeNumber, StringFormat='{}Tree Number {0}'}"
             BackgroundColor="White"
             TreeNumber="{Binding TreeNumber}"
             TreeFieldValues="{Binding TreeFieldValues}"
             AutomationProperties.IsInAccessibleTree="True"
             AutomationProperties.Name="Tree Edit Page">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Logs"
                     Command="{Binding ShowLogsCommand}"
                     AutomationProperties.IsInAccessibleTree="True"
                     AutomationProperties.Name="Logs" />
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <converters:ErrorToColorConverter x:Key="errorToColorConverter"
                                          Default="White"
                                          Error="{StaticResource error}"
                                          Warning="{StaticResource warning}"
                                          SuppressedColor="{StaticResource error_suppressed}" />

        <Style x:Key="errorWarningButton"
               TargetType="Button">
            <Setter Property="TextColor"
                    Value="Black" />

            <Setter Property="FontSize"
                    Value="Large" />

            <Setter Property="Margin"
                    Value="0,0,0,7" />

            <Setter Property="BackgroundColor"
                    Value="{Binding ., Converter={StaticResource errorToColorConverter}}" />

            <Setter Property="Text"
                    Value="{Binding Message}" />
        </Style>

        <tk_converters:BoolToObjectConverter x:Key="hasErrorConverter"
                                             x:TypeArguments="Color"
                                             TrueObject="Red"
                                             FalseObject="Transparent" />

        <converters:CruiseMethodToBoolConverter x:Key="isfixCNTConverter"
                                                MethodMap="FIXCNT" />
    </ContentPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--main fields-->
        <FlexLayout Grid.Row="0"
                    Wrap="Wrap"
                    AlignContent="Start"
                    JustifyContent="SpaceAround"
                    HeightRequest="80">
            <FlexLayout.Resources>
                <Style TargetType="Label">
                    <Setter Property="VerticalTextAlignment"
                            Value="Center" />
                    <Setter Property="HorizontalTextAlignment"
                            Value="End" />
                </Style>
                <Style TargetType="controls:ValuePicker">
                    <Setter Property="WidthRequest"
                            Value="60" />
                    <Setter Property="HeightRequest"
                            Value="44" />
                </Style>

                <Style TargetType="StackLayout">
                    <Setter Property="HeightRequest"
                            Value="50" />
                    <Setter Property="Margin"
                            Value="7,0,0,3" />
                </Style>

                <Style TargetType="Entry">
                    <Setter Property="WidthRequest"
                            Value="50" />
                    <Setter Property="HeightRequest"
                            Value="44" />
                </Style>
            </FlexLayout.Resources>

            <!--Tree Number-->
            <StackLayout Orientation="Horizontal">

                <Label Text="Tree #"
                       AutomationProperties.IsInAccessibleTree="False" />
                <Entry x:Name="_treeNumberEntry"
                       AutomationProperties.IsInAccessibleTree="True"
                       AutomationProperties.Name="Tree Number"
                       Keyboard="Numeric">
                    <Entry.Effects>
                        <effects:SelectAllTextEffect />
                    </Entry.Effects>
                </Entry>

            </StackLayout>

            <!--Stratum-->
            <StackLayout Orientation="Horizontal">

                <Label Text="Stratum"
                       AutomationProperties.IsInAccessibleTree="False" />
                <controls:ValuePicker x:Name="_stratumCodeEntry"
                                      SelectedValue="{Binding StratumCode}"
                                      ValueSource="{Binding StratumCodes}"
                                      WidthRequest="60"
                                      HeightRequest="{StaticResource minTouchableHeight}"
                                      AutomationProperties.IsInAccessibleTree="True"
                                      AutomationProperties.Name="Stratum">
                </controls:ValuePicker>

            </StackLayout>

            <!--Sample Group-->
            <StackLayout Orientation="Horizontal"
                         BackgroundColor="{Binding HasSampleGroupError, Converter={StaticResource hasErrorConverter}}">

                <Label Text="Sample Group"
                       AutomationProperties.IsInAccessibleTree="False" />
                <controls:ValuePicker x:Name="_sampleGroupEntry"
                                      SelectedValue="{Binding SampleGroupCode}"
                                      ValueSource="{Binding SampleGroupCodes}"
                                      WidthRequest="60"
                                      HeightRequest="{StaticResource minTouchableHeight}"
                                      AutomationProperties.IsInAccessibleTree="True"
                                      AutomationProperties.Name="Sample Group">
                </controls:ValuePicker>

            </StackLayout>

            <!--Species-->
            <StackLayout Orientation="Horizontal"
                         BackgroundColor="{Binding HasSpeciesError, Converter={StaticResource hasErrorConverter}}">

                <Label Text="Species"
                       AutomationProperties.IsInAccessibleTree="False" />
                <controls:ValuePicker x:Name="_speciesEntry"
                                      SelectedValue="{Binding SpeciesCode}"
                                      ValueSource="{Binding SpeciesOptions}"
                                      WidthRequest="60"
                                      HeightRequest="{StaticResource minTouchableHeight}"
                                      AutomationProperties.IsInAccessibleTree="True"
                                      AutomationProperties.Name="Species">
                </controls:ValuePicker>

            </StackLayout>

            <!--Live Dead-->
            <StackLayout Orientation="Horizontal">

                <Label Text="Live/Dead"
                       AutomationProperties.IsInAccessibleTree="False" />
                <controls:ValuePicker x:Name="_liveDeadPicker"
                                      SelectedValue="{Binding LiveDead}"
                                      WidthRequest="60"
                                      HeightRequest="{StaticResource minTouchableHeight}"
                                      AutomationProperties.IsInAccessibleTree="True"
                                      AutomationProperties.Name="Live Dead">
                    <controls:ValuePicker.ValueSource>
                        <Array Type="{x:Type x:String}">
                            <x:String>L</x:String>
                            <x:String>D</x:String>
                        </Array>
                    </controls:ValuePicker.ValueSource>
                </controls:ValuePicker>

            </StackLayout>

            <!--Initials-->
            <StackLayout Orientation="Horizontal">
                <Label Text="Initials"
                       AutomationProperties.IsInAccessibleTree="False" />
                <controls:ValuePicker x:Name="_initialsPicker"
                        WidthRequest="60"
                        HeightRequest="{StaticResource minTouchableHeight}"
                        SelectedValue="{Binding Initials}"
                        ValueSource="{Binding Cruisers}"
                        AutomationProperties.IsInAccessibleTree="True"
                        AutomationProperties.Name="Initials" />
            </StackLayout>

            <!--Count Or Measure-->
            <StackLayout Orientation="Horizontal">
                <Label Text="Count/Measure"
                       AutomationProperties.IsInAccessibleTree="False" />
                <Picker WidthRequest="60"
                        HeightRequest="{StaticResource minTouchableHeight}"
                        SelectedItem="{Binding CountOrMeasure}"
                        ItemsSource="{Binding CountOrMeasureOptions}"
                        AutomationProperties.IsInAccessibleTree="True"
                        AutomationProperties.Name="Count or Measure">

                </Picker>

            </StackLayout>

            <!-- Tree Count -->
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding CruiseMethod, Converter={StaticResource isfixCNTConverter}}">
                <Label Text="Tree Count"
                       AutomationProperties.IsInAccessibleTree="False" />
                <Entry Text="{Binding TreeCount}"
                       AutomationProperties.IsInAccessibleTree="True"
                       AutomationProperties.Name="Tree Count" />
            </StackLayout>

            <!-- KPI -->
            <StackLayout Orientation="Horizontal"
                         IsVisible="{Binding CruiseMethod, Converter={StaticResource is3pConverter}}">
                <Label Text="KPI"
                       x:Name="_kpiLabel"
                       AutomationProperties.IsInAccessibleTree="False" />
                <Label Text="{Binding Tree.KPI}"
                       AutomationProperties.IsInAccessibleTree="True"
                       AutomationProperties.LabeledBy="{Reference _kpiLabel}" />
            </StackLayout>

        </FlexLayout>

        <ScrollView x:Name="_editViewsHost"
                    Grid.Row="1"
                    VerticalOptions="FillAndExpand">
            <ScrollView.Resources>
                <ResourceDictionary>
                    <Style TargetType="Label">
                        <Setter Property="TextColor"
                                Value="Black" />
                        <Setter Property="VerticalTextAlignment"
                                Value="Center" />
                    </Style>
                    <Style TargetType="Entry">
                        <Setter Property="TextColor"
                                Value="Black" />
                    </Style>
                    <Style TargetType="Picker">
                        <Setter Property="TextColor"
                                Value="Black" />
                    </Style>
                    <!--<Style TargetType="Switch">
                <Setter Property="TextColor" Value="Black"/>
            </Style>-->
                </ResourceDictionary>
            </ScrollView.Resources>
        </ScrollView>

        <!--Remarks-->
        <StackLayout Grid.Row="2">
            <Label x:Name="_remarksHeading"
                   Text="Remarks" />
            <Editor HeightRequest="80"
                    Text="{Binding Remarks}"
                    AutomationProperties.LabeledBy="{x:Reference _remarksHeading}" />
        </StackLayout>

        <StackLayout Grid.Row="3"
                     BindableLayout.ItemsSource="{Binding ErrorsAndWarnings}"
                     VerticalOptions="End"
                     AutomationProperties.IsInAccessibleTree="True"
                     AutomationProperties.Name="Errors List">
            <BindableLayout.ItemTemplate>
                <DataTemplate>
                    <Button Style="{StaticResource errorWarningButton}"
                            FontSize="Medium"
                            Command="{Binding BindingContext.ShowEditTreeErrorCommand, Source={Reference _page}}"
                            CommandParameter="{Binding .}"
                            AutomationProperties.IsInAccessibleTree="True"
                            AutomationProperties.Name="Error Item" />
                </DataTemplate>
            </BindableLayout.ItemTemplate>
        </StackLayout>
    </Grid>
</ContentPage>